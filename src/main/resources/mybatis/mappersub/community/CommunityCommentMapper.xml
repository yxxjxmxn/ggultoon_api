<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.architecture.admin.models.daosub.community.CommunityCommentDaoSub">
    <!-- ==============================================================
        SETTING
    =============================================================== -->
    <!-- database name -->
    <sql id="database">${databaseRefId}</sql>


    <!-- resultMap -->
    <resultMap id="comment_rm" type="CommunityCommentDto">
        <!-- 회원 idx -->
        <result property="memberIdx" column="memberIdx"/>
        <!-- 댓글 작성자 닉네임 -->
        <collection property="writerNick"  column="memberIdx" javaType="String" ofType="" select="getCommentWriterNick"/>
    </resultMap>

    <resultMap id="comment_login_rm" type="CommunityCommentDto">
        <!-- 회원 idx -->
        <result property="memberIdx" column="memberIdx"/>
        <!-- 댓글 작성자 닉네임 -->
        <collection property="writerNick"  column="memberIdx" javaType="String" ofType="" select="getCommentWriterNick"/>
    </resultMap>

    <!-- ==============================================================
        SELECT
    =============================================================== -->

    <!-- 댓글 개수 카운트 -->
    <select id="getCommentsTotalCnt" parameterType="SearchDto" resultType="int">
        SELECT
            COUNT(`idx`) AS totalCnt
        FROM <include refid="database"/>`community_comment`
        WHERE
                `community_contents_idx` = #{communityIdx}
            <if test="idxList != null and idxList.size!=0">
                AND `idx` NOT IN
                <foreach collection="idxList" item="idx" open="("  separator="," close=")">
                    #{idx}
                </foreach>
            </if>
            AND `parent_idx`  = 0
            AND `view`        = 1
            AND `state`       = 1
    </select>

    <!-- 대댓글 개수 카운트 -->
    <select id="getReplyCommentTotalCnt" parameterType="SearchDto" resultType="int">
        SELECT
            COUNT(`idx`) AS totalCnt
        FROM <include refid="database"/>`community_comment`
        WHERE
                `parent_idx` = #{idx}
            <if test="idxList != null and idxList.size!=0">
                AND `idx` NOT IN
                <foreach collection="idxList" item="idx" open="("  separator="," close=")">
                    #{idx}
                </foreach>
            </if>
            AND `view`        = 1
            AND `state`       = 1
    </select>

    <!-- 유효한 댓글 idx 인지 조회 -->
    <select id="getCommentCnt" parameterType="CommunityCommentDto" resultType="int">
        SELECT
            COUNT(`idx`) AS `commentCnt`
        FROM <include refid="database"/>`community_comment`
        WHERE
                `idx`                   = #{idx}
            AND `community_contents_idx` = #{communityContentsIdx}
            AND `state`                 = 1
            AND `view`                  = 1
    </select>

    <!-- 댓글 리스트 조회(비로그인) -->
    <select id="getCommentList" parameterType="SearchDto" resultMap="comment_rm">
        SELECT
            `idx`,
            `member_idx` AS `memberIdx`,
            `group_idx`,
            `parent_idx`,
            `content`,
            `comment_cnt`,
            `like_cnt`,
            CONVERT_TZ(`regdate`, 'UTC', '${convertTZ}') AS `regdate`
        FROM <include refid="database"/>`community_comment`
        WHERE
                `community_contents_idx` = #{communityIdx}
            AND `parent_idx`  = 0
            AND `view`        = 1
            AND `state`       = 1
        ORDER BY `regdate` DESC
        <choose>
            <when test="pagination != null">
                LIMIT #{recordSize}
                OFFSET #{pagination.limitStart}
            </when>
            <otherwise>
                LIMIT #{recordSize}
            </otherwise>
        </choose>
    </select>

    <!-- 댓글 리스트 조회(로그인) -->
    <select id="getCommentListLogin" parameterType="SearchDto" resultMap="comment_login_rm">
        SELECT
            `idx`,
            `member_idx` AS `memberIdx`,
            `group_idx`,
            `parent_idx`,
            `content`,
            `comment_cnt`,
            `like_cnt`,
            #{memberIdx} AS `loginIdx`,
            CONVERT_TZ(`regdate`, 'UTC', '${convertTZ}') AS `regdate`
        FROM <include refid="database"/>`community_comment`
        WHERE
                `community_contents_idx` = #{communityIdx}
            AND `parent_idx`  = 0
            AND `view`        = 1
            AND `state`       = 1
        <if test="idxList != null and idxList.size!=0">
            AND `idx` NOT IN
            <foreach collection="idxList" item="idx" open="("  separator="," close=")">
                #{idx}
            </foreach>
        </if>
        ORDER BY `regdate` DESC
        <choose>
            <when test="pagination != null">
                LIMIT #{recordSize}
                OFFSET #{pagination.limitStart}
            </when>
            <otherwise>
                LIMIT #{recordSize}
            </otherwise>
        </choose>
    </select>

    <!-- 대댓글 리스트 조회(로그인) -->
    <select id="getReplyCommentListLogin" parameterType="SearchDto" resultMap="comment_login_rm">
        SELECT
            `idx`,
            `member_idx` AS `memberIdx`,
            `group_idx`,
            `parent_idx`,
            `content`,
            `like_cnt`,
            #{memberIdx} AS `loginIdx`,
            CONVERT_TZ(`regdate`, 'UTC', '${convertTZ}') AS `regdate`
        FROM <include refid="database"/>`community_comment`
        WHERE
                `community_contents_idx` = #{communityIdx}
            AND `parent_idx`  = #{idx}
            AND `view`        = 1
            AND `state`       = 1
        <if test="idxList != null and idxList.size!=0">
            AND `idx` NOT IN
            <foreach collection="idxList" item="idx" open="("  separator="," close=")">
                #{idx}
            </foreach>
        </if>
        ORDER BY `regdate` DESC
        <choose>
            <when test="pagination != null">
                LIMIT #{recordSize}
                OFFSET #{pagination.limitStart}
            </when>
            <otherwise>
                LIMIT #{recordSize}
            </otherwise>
        </choose>
    </select>

    <!-- 대댓글 리스트 조회(비로그인) -->
    <select id="getReplyCommentList" parameterType="SearchDto" resultMap="comment_rm">
        SELECT
            `idx`,
            `member_idx` AS `memberIdx`,
            `group_idx`,
            `parent_idx`,
            `content`,
            `like_cnt`,
            CONVERT_TZ(`regdate`, 'UTC', '${convertTZ}') AS `regdate`
        FROM <include refid="database"/>`community_comment`
        WHERE
                `community_contents_idx` = #{communityIdx}
            AND `parent_idx`  = #{idx}
            AND `view`        = 1
            AND `state`       = 1
        ORDER BY `regdate` DESC
        <choose>
            <when test="pagination != null">
                LIMIT #{recordSize}
                OFFSET #{pagination.limitStart}
            </when>
            <otherwise>
                LIMIT #{recordSize}
            </otherwise>
        </choose>
    </select>

    <!-- 댓글 작성자 member_idx 조회-->
    <select id="getCommentWriterIdx" parameterType="Long" resultType="Long">
        SELECT
            `member_idx`
        FROM <include refid="database"/>`community_comment`
        WHERE
                `idx` = #{idx}
            AND `state` = 1
            AND `view`  = 1
    </select>

    <!-- 댓글의 parent_idx, comment_cnt 조회 -->
    <select id="getCommentParentAndCommentCnt" parameterType="Long" resultType="CommunityCommentDto">
        SELECT
            `parent_idx`,
            `comment_cnt`
        FROM <include refid="database"/>`community_comment`
        WHERE
            `idx` = #{idx}
    </select>

    <!-- 댓글 좋아요 한적 있는지 조회 -->
    <select id="getMemCommentLikeState" parameterType="CommunityCommentDto" resultType="Integer">
        SELECT
            `state`
        FROM <include refid="database"/>`community_comment_like`
        WHERE
                `member_idx`            = #{memberIdx}
            AND `community_comment_idx` = #{idx}
    </select>

    <!-- 신고한 댓글 idx 리스트 조회-->
    <select id="getCommentReportList" parameterType="Long" resultType="Long">
        SELECT
            `comment_idx`
        FROM <include refid="database"/>`community_comment_report`
        WHERE
                `member_idx` = #{memberIdx}
            AND `state` = 1
    </select>

    <!-- 댓글 신고 한적 있는지 조회 -->
    <select id="getReportCnt" parameterType="CommunityCommentDto" resultType="int">
        SELECT
            COUNT(`idx`) AS `reportCnt`
        FROM <include refid="database"/>`community_comment_report`
        WHERE
                `comment_idx` = #{idx}
            AND `member_idx` = #{memberIdx}
            AND `state` = 1
    </select>

    <!-- ==============================================================
    COLLECTION SELECT
    =============================================================== -->

    <!-- 댓글 작성자 닉네임 -->
    <select id="getCommentWriterNick" parameterType="Long" resultType="String">
        SELECT
            `nick`
        FROM <include refid="database"/>`member`
        WHERE
                `idx` = #{memberIdx}
    </select>

    <!-- 댓글 좋아요 유무 조회 (comment_like 테이블) -->
    <select id="getIsCommentLike" parameterType="HashMap" resultType="int">
        SELECT
            COUNT(`idx`) AS `memberLike`
        FROM <include refid="database"/>`community_comment_like`
        WHERE
                `member_idx`            = #{loginIdx}
            AND `community_comment_idx` = #{idx}
            AND `state`                 = 1
    </select>
</mapper>